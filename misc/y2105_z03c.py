"""

C. Удаление дубликатов

Дан упорядоченный по неубыванию массив целых 32-разрядных чисел.
Требуется удалить из него все повторения.

Желательно получить решение, которое не считывает входной файл
целиком в память, т.е., использует лишь константный объем памяти
в процессе работы.


Формат ввода

Первая строка входного файла содержит единственное
число n, n ≤ 1000000.

На следующих n строк расположены числа — элементы массива,
по одному на строку. Числа отсортированы по неубыванию.


Формат вывода

Выходной файл должен содержать следующие в порядке возрастания
уникальные элементы входного массива.

Пример 1
Ввод:
5
2
4
8
8
8

Вывод:
2
4
8


Пример 2
Ввод:
5
2
2
2
8
8

Вывод:
2
8

Задача: C.Удаление дубликатов
Компилятор: Python 3.7.3
Вердикт: OK
Статус: Полное решение
	№	Вердикт	Ресурсы	Баллы
	1	ok	47ms / 3.92Mb	-
	2	ok	46ms / 3.95Mb	-
	3	ok	43ms / 3.92Mb	-
	4	ok	46ms / 3.95Mb	-
	5	ok	47ms / 3.95Mb	-
    ...
    183	ok	47ms / 3.92Mb	-
	184	ok	46ms / 3.95Mb	-
	185	ok	47ms / 3.95Mb	-
	186	ok	49ms / 3.92Mb	-
	187	ok	49ms / 3.92Mb	-
	188	ok	48ms / 3.91Mb	-
	189	ok	67ms / 3.95Mb	-
	190	ok	71ms / 3.89Mb	-
	191	ok	68ms / 3.91Mb	-
	192	ok	61ms / 3.92Mb	-
	193	ok	300ms / 7.33Mb	-
	194	ok	296ms / 5.99Mb	-
	195	ok	249ms / 4.58Mb	-
	196	ok	206ms / 3.92Mb	-


"""

import sys


l_t = []  # result
l_v = []  # part
len_input = sys.stdin.readline().strip()  # Length

last_value = float("-inf")

for i in range(int(len_input)):
    v = int(sys.stdin.readline().strip())
    if last_value < v:
        last_value = v
        l_v.append(v)
        # print("add v:", v, "l_v=", l_v)
    else:
        if len(l_v) > 0:
            l_t.append(tuple(sorted(set(l_v))))
            # print("add l_v:", l_v, "l_tv=", l_t)
            l_v.clear()
            del l_v
            l_v = []
l_t.append(tuple(l_v))
# print("add l_v:", l_v, "l_tv=", l_t)
l_v.clear()
del l_v
for t in l_t:
    for i in t:
        print(i)
